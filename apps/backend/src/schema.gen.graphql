# Code generated by graphql-codegen; DO NOT EDIT.


schema {
  query: Query
  mutation: Mutation
}

"""ブログ記事の著者"""
type Author {
  blogs: [Blog!]
  createdAt: DateTime!
  id: ID!
  image: MicroCmsImage
  name: String!
  publishedAt: DateTime
  revisedAt: DateTime
  updatedAt: DateTime!
}

"""ブログ記事"""
type Blog {
  author: Author!
  body: String!
  category: Category!
  createdAt: DateTime!
  id: ID!
  image: MicroCmsImage
  publishedAt: DateTime
  revisedAt: DateTime
  title: String!
  updatedAt: DateTime!
}

"""ブログ記事のカテゴリー"""
type Category {
  blogs: [Blog!]!
  createdAt: DateTime!
  id: ID!
  name: String!
  publishedAt: DateTime
  revisedAt: DateTime
  updatedAt: DateTime!
}

type Comment {
  body: String!
  id: ID!
  link: Link
  postedBy: User
}

scalar Date

scalar DateTime

type Link {
  comments: [Comment!]!
  description: String!
  id: ID!
  postedBy: User
  url: String!
}

type Meshi {
  address: String!
  articleId: String!
  createdAt: Date!
  id: ID!
  imageUrl: String!
  latitude: Float!
  longitude: Float!
  municipality: Municipality
  publishedDate: Date!
  siteUrl: String!
  storeName: String!
  title: String!
}

"""MicroCMSの画像"""
type MicroCmsImage {
  height: Int
  url: String!
  width: Int
}

type Municipality {
  createdAt: Date!
  id: ID!
  meshis: [Meshi]!
  name: String!
}

type Mutation {
  postCommentOnLink(body: String!, linkId: ID!): Comment!
  postLink(description: String!, url: String!): Link!
}

type Query {
  blog(id: ID!): Blog!
  blogs: [Blog!]!
  categories: [Category!]!
  comment(id: ID!): Comment
  feed(filterNeedle: String, skip: Int, take: Int): [Link!]!
  info: String!
  link(id: ID!): Link
  meshi(id: ID!): Meshi
  meshis: [Meshi!]!
  municipalities: [Municipality!]!
  municipality(id: ID!): Municipality
  user(id: ID!): User!
  users: [User!]!
}

type User {
  comments: [Comment!]
  description: String
  displayName: String!
  iconImageURL: String
  id: ID!
  links: [Link!]
  name: String!
  twitterProfileUrl: String
}